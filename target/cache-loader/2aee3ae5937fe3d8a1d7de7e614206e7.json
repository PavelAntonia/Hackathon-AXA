{"remainingRequest":"/home/dakixr/Desktop/Github/AXA/node_modules/thread-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!/home/dakixr/Desktop/Github/AXA/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[3]!/home/dakixr/Desktop/Github/AXA/src/main/webapp/app/modules/account/sessions/sessions.tsx","dependencies":[{"path":"/home/dakixr/Desktop/Github/AXA/src/main/webapp/app/modules/account/sessions/sessions.tsx","mtime":1618910628749},{"path":"/home/dakixr/Desktop/Github/AXA/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/dakixr/Desktop/Github/AXA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dakixr/Desktop/Github/AXA/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dakixr/Desktop/Github/AXA/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgQWxlcnQsIFRhYmxlLCBCdXR0b24gfSBmcm9tICdyZWFjdHN0cmFwJzsKaW1wb3J0IHsgZ2V0U2Vzc2lvbiB9IGZyb20gJ2FwcC9zaGFyZWQvcmVkdWNlcnMvYXV0aGVudGljYXRpb24nOwppbXBvcnQgeyBmaW5kQWxsLCBpbnZhbGlkYXRlU2Vzc2lvbiB9IGZyb20gJy4vc2Vzc2lvbnMucmVkdWNlcic7CmV4cG9ydCBjbGFzcyBTZXNzaW9uc1BhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgewogICAgY29uc3RydWN0b3IoKSB7CiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTsKICAgICAgICB0aGlzLmRvU2Vzc2lvbkludmFsaWRhdGlvbiA9IHNlcmllcyA9PiAoKSA9PiB7CiAgICAgICAgICAgIHRoaXMucHJvcHMuaW52YWxpZGF0ZVNlc3Npb24oc2VyaWVzKTsKICAgICAgICAgICAgdGhpcy5wcm9wcy5maW5kQWxsKCk7CiAgICAgICAgfTsKICAgICAgICB0aGlzLnJlZnJlc2hMaXN0ID0gKCkgPT4gewogICAgICAgICAgICB0aGlzLnByb3BzLmZpbmRBbGwoKTsKICAgICAgICB9OwogICAgfQogICAgY29tcG9uZW50RGlkTW91bnQoKSB7CiAgICAgICAgdGhpcy5wcm9wcy5nZXRTZXNzaW9uKCk7CiAgICAgICAgdGhpcy5wcm9wcy5maW5kQWxsKCk7CiAgICB9CiAgICByZW5kZXIoKSB7CiAgICAgICAgY29uc3QgeyBhY2NvdW50LCBzZXNzaW9ucywgdXBkYXRlU3VjY2VzcywgdXBkYXRlRmFpbHVyZSB9ID0gdGhpcy5wcm9wczsKICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIG51bGwsCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImgyIiwgbnVsbCwKICAgICAgICAgICAgICAgICJBY3RpdmUgc2Vzc2lvbnMgZm9yIFsiLAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgic3Ryb25nIiwgbnVsbCwgYWNjb3VudC5sb2dpbiksCiAgICAgICAgICAgICAgICAiXSIpLAogICAgICAgICAgICB1cGRhdGVTdWNjZXNzID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQWxlcnQsIHsgY29sb3I6ICJzdWNjZXNzIiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgic3Ryb25nIiwgbnVsbCwgIlNlc3Npb24gaW52YWxpZGF0ZWQhIikpKSA6IG51bGwsCiAgICAgICAgICAgIHVwZGF0ZUZhaWx1cmUgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChBbGVydCwgeyBjb2xvcjogImRhbmdlciIgfSwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBudWxsLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInN0cm9uZyIsIG51bGwsICJBbiBlcnJvciBoYXMgb2NjdXJyZWQhIiksCiAgICAgICAgICAgICAgICAgICAgIiBUaGUgc2Vzc2lvbiBjb3VsZCBub3QgYmUgaW52YWxpZGF0ZWQuIikpKSA6IG51bGwsCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7IGNvbG9yOiAicHJpbWFyeSIsIG9uQ2xpY2s6IHRoaXMucmVmcmVzaExpc3QgfSwgIlJlZnJlc2giKSwKICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgeyBjbGFzc05hbWU6ICJ0YWJsZS1yZXNwb25zaXZlIiB9LAogICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUYWJsZSwgeyBjbGFzc05hbWU6ICJ0YWJsZS1zdHJpcGVkIiB9LAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRoZWFkIiwgbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidHIiLCBudWxsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiSVAgQWRkcmVzcyIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiVXNlciBhZ2VudCIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiRGF0ZSIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsKSkpLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRib2R5IiwgbnVsbCwgc2Vzc2lvbnMubWFwKChzLCBpbmRleCkgPT4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRyIiwgeyBrZXk6IGluZGV4IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRkIiwgbnVsbCwgcy5pcEFkZHJlc3MpLAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ZCIsIG51bGwsIHMudXNlckFnZW50KSwKICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGQiLCBudWxsLCBzLnRva2VuRGF0ZSksCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRkIiwgbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7IGNvbG9yOiAicHJpbWFyeSIsIG9uQ2xpY2s6IHRoaXMuZG9TZXNzaW9uSW52YWxpZGF0aW9uKHMuc2VyaWVzKSB9LCAiSW52YWxpZGF0ZSIpKSkpKSkpKSkpOwogICAgfQp9CmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9ICh7IGF1dGhlbnRpY2F0aW9uLCBzZXNzaW9ucyB9KSA9PiAoewogICAgYWNjb3VudDogYXV0aGVudGljYXRpb24uYWNjb3VudCwKICAgIHNlc3Npb25zOiBzZXNzaW9ucy5zZXNzaW9ucywKICAgIHVwZGF0ZVN1Y2Nlc3M6IHNlc3Npb25zLnVwZGF0ZVN1Y2Nlc3MsCiAgICB1cGRhdGVGYWlsdXJlOiBzZXNzaW9ucy51cGRhdGVGYWlsdXJlLAp9KTsKY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0geyBnZXRTZXNzaW9uLCBmaW5kQWxsLCBpbnZhbGlkYXRlU2Vzc2lvbiB9OwpleHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShTZXNzaW9uc1BhZ2UpOwo="},{"version":3,"file":"/home/dakixr/Desktop/Github/AXA/src/main/webapp/app/modules/account/sessions/sessions.tsx","sourceRoot":"","sources":["/home/dakixr/Desktop/Github/AXA/src/main/webapp/app/modules/account/sessions/sessions.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAElD,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAEhE,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AAIhE,MAAM,OAAO,YAAa,SAAQ,KAAK,CAAC,SAAyB;IAAjE;;QAME,0BAAqB,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC;IA0DJ,CAAC;IAtEC,iBAAiB;QACf,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAWD,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACvE,OAAO,CACL;YACE;;gBACuB,oCAAS,OAAO,CAAC,KAAK,CAAU;oBAClD;YAEJ,aAAa,CAAC,CAAC,CAAC,CACf,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;gBACpB,2DAAqC,CAC/B,CACT,CAAC,CAAC,CAAC,IAAI;YAEP,aAAa,CAAC,CAAC,CAAC,CACf,oBAAC,KAAK,IAAC,KAAK,EAAC,QAAQ;gBACnB;oBACE,6DAAuC;6DAClC,CACD,CACT,CAAC,CAAC,CAAC,IAAI;YAER,oBAAC,MAAM,IAAC,KAAK,EAAC,SAAS,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,cAExC;YAET,6BAAK,SAAS,EAAC,kBAAkB;gBAC/B,oBAAC,KAAK,IAAC,SAAS,EAAC,eAAe;oBAC9B;wBACE;4BACE,6CAAmB;4BACnB,6CAAmB;4BACnB,uCAAa;4BACb,+BAAM,CACH,CACC;oBAER,mCACG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAC1B,4BAAI,GAAG,EAAE,KAAK;wBACZ,gCAAK,CAAC,CAAC,SAAS,CAAM;wBACtB,gCAAK,CAAC,CAAC,SAAS,CAAM;wBACtB,gCAAK,CAAC,CAAC,SAAS,CAAM;wBACtB;4BACE,oBAAC,MAAM,IAAC,KAAK,EAAC,SAAS,EAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,iBAE5D,CACN,CACF,CACN,CAAC,CACI,CACF,CACJ,CACF,CACP,CAAC;IACJ,CAAC;CACF;AAED,MAAM,eAAe,GAAG,CAAC,EAAE,cAAc,EAAE,QAAQ,EAAc,EAAE,EAAE,CAAC,CAAC;IACrE,OAAO,EAAE,cAAc,CAAC,OAAO;IAC/B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;IAC3B,aAAa,EAAE,QAAQ,CAAC,aAAa;IACrC,aAAa,EAAE,QAAQ,CAAC,aAAa;CACtC,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC;AAKtE,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Alert, Table, Button } from 'reactstrap';\n\nimport { getSession } from 'app/shared/reducers/authentication';\nimport { IRootState } from 'app/shared/reducers';\nimport { findAll, invalidateSession } from './sessions.reducer';\n\nexport interface ISessionsProps extends StateProps, DispatchProps {}\n\nexport class SessionsPage extends React.Component<ISessionsProps> {\n  componentDidMount() {\n    this.props.getSession();\n    this.props.findAll();\n  }\n\n  doSessionInvalidation = series => () => {\n    this.props.invalidateSession(series);\n    this.props.findAll();\n  };\n\n  refreshList = () => {\n    this.props.findAll();\n  };\n\n  render() {\n    const { account, sessions, updateSuccess, updateFailure } = this.props;\n    return (\n      <div>\n        <h2>\n          Active sessions for [<strong>{account.login}</strong>]\n        </h2>\n\n        {updateSuccess ? (\n          <Alert color=\"success\">\n            <strong>Session invalidated!</strong>\n          </Alert>\n        ) : null}\n\n        {updateFailure ? (\n          <Alert color=\"danger\">\n            <span>\n              <strong>An error has occurred!</strong> The session could not be invalidated.\n            </span>\n          </Alert>\n        ) : null}\n\n        <Button color=\"primary\" onClick={this.refreshList}>\n          Refresh\n        </Button>\n\n        <div className=\"table-responsive\">\n          <Table className=\"table-striped\">\n            <thead>\n              <tr>\n                <th>IP Address</th>\n                <th>User agent</th>\n                <th>Date</th>\n                <th />\n              </tr>\n            </thead>\n\n            <tbody>\n              {sessions.map((s, index) => (\n                <tr key={index}>\n                  <td>{s.ipAddress}</td>\n                  <td>{s.userAgent}</td>\n                  <td>{s.tokenDate}</td>\n                  <td>\n                    <Button color=\"primary\" onClick={this.doSessionInvalidation(s.series)}>\n                      Invalidate\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authentication, sessions }: IRootState) => ({\n  account: authentication.account,\n  sessions: sessions.sessions,\n  updateSuccess: sessions.updateSuccess,\n  updateFailure: sessions.updateFailure,\n});\n\nconst mapDispatchToProps = { getSession, findAll, invalidateSession };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionsPage);\n"]}]}